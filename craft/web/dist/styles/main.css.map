{"version":3,"sources":["globals/_grid.scss","main.css","globals/_reset.scss","main.scss","globals/_mixins.scss","globals/_variables.scss"],"names":[],"mappings":"AAyCA,KACC,WAAY,CCxCX,MDqBO,CAkBT,AAGC,uBAjBI,WAAW,AACX,aAAc,CACjB,AAYF,WAVK,UAAW,CACd,AE3BF,2ZAaE,SAAU,AACV,UAAW,AACX,SAAU,AACV,eAAgB,AAChB,aAAc,AACd,uBAAyB,CAC1B,AAED,8EAEE,aAAe,CAChB,AACD,KACE,aAAe,CAChB,AACD,GACE,eAAiB,CAClB,AACD,aACE,WAAa,CACd,AACD,oDAEE,WAAY,AACZ,YAAc,CACf,AACD,MACE,yBAA0B,AAC1B,gBAAkB,CACnB,AACD,EACE,oBAAsB,CACvB,AChDD,EACI,qBAAuB,CAC1B,AACD,KACI,kBAAmB,AACnB,eAAiB,CAgBpB,AC+aC,0BDjcF,KAIQ,aAAe,CActB,CAAA,AC2ZC,0BD7aF,KAOQ,aAAe,CAWtB,CAAA,AC8YC,0BDhaF,KAUQ,aAAe,CAQtB,CAAA,ACyVC,yBD3WF,KAaQ,aAAe,CAKtB,CAAA,AC6UC,yBD/VF,KAgBQ,aAAe,CAEtB,CAAA,AAGD,KACI,8BACA,AE1B4B,yBF2B5B,AEpBU,uCFoBV,AAAgC,+BAAA,AAChC,gBAAkB,CACrB","file":"main.css","sourcesContent":["/////////////////\n// Semantic.gs // for SCSS: http://sass-lang.com/\n/////////////////\n\n// Defaults which you can freely override\n$column-width: 80px;\n$gutter-width: 20px;\n$columns: 12;\n\n// Utility function â€” you should never need to modify this\n@function gridsystem-width($columns:$columns) {\n\t@return ($column-width * $columns) + ($gutter-width * $columns);\n}\n\n// Set $total-width to 100% for a fluid layout\n$total-width: gridsystem-width($columns);\n\n// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html\n// $min-width: 999999;\n// $correction: 0.5 / $min-width * 100;\n\n// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/\n@mixin clearfix() {\n\t*zoom:1;\n\n\t&:before,\n\t&:after {\n\t    content:\"\";\n\t    display:table;\n\t}\n\t&:after {\n\t    clear:both;\n\t}\n}\n\n\n\n//////////\n// GRID //\n//////////\n\nbody {\n\twidth: 100%;\n\t@include clearfix();\n}\n\n\n\n@mixin row($columns:$columns) {\n\tdisplay: block;\n\twidth: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));\n\tmargin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);\n\t// *width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns))-$correction;\n\t// *margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1)-$correction;\n\t@include clearfix();\n}\n@mixin column($x,$columns:$columns) {\n\twidth: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));\n\t//float: left;\n\n\t// *width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns))-$correction;\n\t// *margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns))-$correction;\n}\n\n@function column-val($x,$columns:$columns) {\n\t@return $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));\n\n\t// *width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns))-$correction;\n\t// *margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns))-$correction;\n}\n\n\n@mixin push($offset:1) {\n\tmargin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));\n}\n@mixin pull($offset:1) {\n\tmargin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));\n}\n\n$columns: 12;\n$column-width: 80;\n$gutter-width: 0;\n\n$total-width: 100%; // Switch from pixels to percentages\n","body {\n  width: 100%;\n  *zoom: 1; }\n  body:before, body:after {\n    content: \"\";\n    display: table; }\n  body:after {\n    clear: both; }\n\n@-webkit-keyframes swoopOut {\n  to {\n    -webkit-transform: translateY(-20px);\n            transform: translateY(-20px); } }\n\n@keyframes swoopOut {\n  to {\n    -webkit-transform: translateY(-20px);\n            transform: translateY(-20px); } }\n\n/* @include when-inside('.example'){ */\n/*  @include family-of(3){  */\n/* @include nth-of-family(3, 7) { */\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\na {\n  text-decoration: none; }\n\n* {\n  box-sizing: border-box; }\n\nhtml {\n  overflow-x: hidden;\n  font-size: 62.5%; }\n  @media (max-width: 1599px) {\n    html {\n      font-size: 60%; } }\n  @media (max-width: 1399px) {\n    html {\n      font-size: 55%; } }\n  @media (max-width: 1200px) {\n    html {\n      font-size: 52%; } }\n  @media (max-width: 768px) {\n    html {\n      font-size: 50%; } }\n  @media (max-width: 549px) {\n    html {\n      font-size: 40%; } }\n\nbody {\n  font-family: \"Roboto\", sans-serif;\n  background-color: #223b74;\n  -webkit-font-feature-settings: \"liga\" 0;\n     -moz-font-feature-settings: \"liga\" 0;\n          font-feature-settings: \"liga\" 0;\n  font-size: 1.6rem; }\n","/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\na {\n  text-decoration: none;\n}","@import \"_includes\";\n\n* {\n    box-sizing: border-box;\n}\nhtml {\n    overflow-x: hidden;\n    font-size: 62.5%;\n    @include desktop-large-below {\n        font-size: 60%;\n    }\n    @include desktop-medium-below {\n        font-size: 55%;\n    }\n    @include desktop-small-below {\n        font-size: 52%;\n    }\n    @include tablet-below {\n        font-size: 50%;\n    }\n    @include phone-large-below {\n        font-size: 40%;\n    }\n}\n\n\nbody {\n    font-family: $body-font;\n    background-color: $blue;\n    font-feature-settings: \"liga\" 0;\n    font-size: 1.6rem;\n}","@mixin transition($n){\n  transition:all $n ease;\n  -webkit-transition:all $n ease;\n  -moz-transition:all $n ease;\n}\n@mixin background-image($size, $position, $img){\n  background-image:url($img);\n  background-repeat:no-repeat !important;\n  background-size:$size !important;\n  background-position:$position !important;\n}\n\n@mixin flex{\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex !important;\n  -ms-flex-align: center;\n  -webkit-align-items: center !important;\n  -webkit-box-align: center !important;\n  align-items: center !important;\n}\n\n\n/// poly-fluid-sizing\n/// Generate linear interpolated size values through multiple break points\n/// @param $property - A string CSS property name\n/// @param $map - A SASS map of viewport unit and size value pairs\n/// @requires function linear-interpolation\n/// @requires function map-sort\n/// @example\n///   @include poly-fluid-sizing('font-size', (576px: 22px, 768px: 24px, 992px: 34px));\n/// @author Jake Wilson <jake.e.wilson@gmail.com>\n@mixin poly-fluid-sizing($property, $map) {\n  // Get the number of provided breakpoints\n  $length: length(map-keys($map));\n\n  // Error if the number of breakpoints is < 2\n  @if ($length < 2) {\n    @error \"poly-fluid-sizing() $map requires at least values\"\n  }\n\n  // Sort the map by viewport width (key)\n  $map: map-sort($map);\n  $keys: map-keys($map);\n\n  // Minimum size\n  #{$property}: map-get($map, nth($keys,1));\n\n  // Interpolated size through breakpoints\n  @for $i from 1 through ($length - 1) {\n    @media (min-width:nth($keys,$i)) {\n      #{$property}: linear-interpolation((nth($keys,$i): map-get($map, nth($keys,$i)), nth($keys,($i+1)): map-get($map, nth($keys,($i + 1)))));\n    }\n  }\n\n  // Maxmimum size\n  @media (min-width:nth($keys,$length)) {\n    #{$property}: map-get($map, nth($keys,$length));\n  }\n}\n\n/// linear-interpolation\n/// Calculate the definition of a line between two points\n/// @param $map - A SASS map of viewport widths and size value pairs\n/// @returns A linear equation as a calc() function\n/// @example\n///   font-size: linear-interpolation((320px: 18px, 768px: 26px));\n/// @author Jake Wilson <jake.e.wilson@gmail.com>\n@function linear-interpolation($map) {\n  $keys: map-keys($map);\n  @if (length($keys) != 2) {\n    @error \"linear-interpolation() $map must be exactly 2 values\";\n  }\n  // The slope\n  $m: (map-get($map, nth($keys, 2)) - map-get($map, nth($keys, 1)))/(nth($keys, 2) - nth($keys,1));\n\n  // The y-intercept\n  $b: map-get($map, nth($keys, 1)) - $m * nth($keys, 1);\n\n  // Determine if the sign should be positive or negative\n  $sign: \"+\";\n  @if ($b < 0) {\n    $sign: \"-\";\n    $b: abs($b);\n  }\n\n  @return calc(#{$m*100}vw #{$sign} #{$b});\n}\n\n/// list-sort\n/// Sort a SASS list\n/// @param $list - A SASS list\n/// @returns A sorted SASS list\n/// @requires function list-remove\n/// @author Jake Wilson <jake.e.wilson@gmail.com>\n@function list-sort($list) {\n  $sortedlist: ();\n  @while length($list) > 0 {\n    $value: nth($list,1);\n    @each $item in $list {\n      @if $item < $value {\n        $value: $item;\n      }\n    }\n    $sortedlist: append($sortedlist, $value, 'space');\n    $list: list-remove($list, index($list, $value));\n  }\n  @return $sortedlist;\n}\n\n/// map-sort\n/// Sort map by keys\n/// @param $map - A SASS map\n/// @returns A SASS map sorted by keys\n/// @requires function list-sort\n/// @author Jake Wilson <jake.e.wilson@gmail.com>\n@function map-sort($map) {\n  $keys: list-sort(map-keys($map));\n  $sortedMap: ();\n  @each $key in $keys {\n    $sortedMap: map-merge($sortedMap, ($key: map-get($map, $key)));\n  }\n  @return $sortedMap;\n}\n\n/// list-remove\n/// Remove an item from a list\n/// @param $list - A SASS list\n/// @param $index - The list index to remove\n/// @returns A SASS list\n/// @author Jake Wilson <jake.e.wilson@gmail.com>\n@function list-remove($list, $index) {\n  $newList: ();\n  @for $i from 1 through length($list) {\n    @if $i != $index {\n      $newList: append($newList, nth($list,$i), 'space');\n    }\n  }\n  @return $newList;\n}\n\n\n@mixin responsive-height($responsive, $min, $max: false, $fallback: false) {\n  $responsive-unitless: $responsive / ($responsive - $responsive + 1);\n  $dimension: if(unit($responsive) == 'vh', 'height', 'width');\n  $min-breakpoint: $min / $responsive-unitless * 100;\n\n  @media (max-#{$dimension}: #{$min-breakpoint}) {\n    height: $min;\n  }\n\n  @if $max {\n    $max-breakpoint: $max / $responsive-unitless * 100;\n\n    @media (min-#{$dimension}: #{$max-breakpoint}) {\n      height: $max;\n    }\n  }\n\n  @if $fallback {\n    height: $fallback;\n  }\n\n  height: $responsive;\n}\n\n\n@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {\n  $responsive-unitless: $responsive / ($responsive - $responsive + 1);\n  $dimension: if(unit($responsive) == 'vh', 'height', 'width');\n  $min-breakpoint: $min / $responsive-unitless * 100;\n\n  @media (max-#{$dimension}: #{$min-breakpoint}) {\n    font-size: $min;\n  }\n\n  @if $max {\n    $max-breakpoint: $max / $responsive-unitless * 100;\n\n    @media (min-#{$dimension}: #{$max-breakpoint}) {\n      font-size: $max;\n    }\n  }\n\n  @if $fallback {\n    font-size: $fallback;\n  }\n\n  font-size: $responsive;\n}\n\n\n@mixin fadeOutOnPageTransition {\n  transform: translateY(10px);\n  opacity: 0;\n  transition: all .3s $smooth-bezier;\n  .is-exiting &{\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  .is-visible &{\n    transform: translateY(0px);\n    opacity: 1;\n    transition: all .3s $smooth-bezier .1s;\n  }\n}\n\n\n@mixin swoopOut{\n\n  .is-exiting &{\n\n  }\n  .is-visible &{\n\n  }\n}\n\n@keyframes swoopOut{\n  to{\n    transform: translateY(-20px);\n  }\n}\n\n\n@mixin slideOutOnPageTransition {\n  //transform: translateY(10px);\n  //opacity: 0;\n  transition: all .3s $smooth-bezier;\n  .is-visible &{\n    transform: translateY(0px);\n    //opacity: 1;\n    transition: all .3s $smooth-bezier .1s;\n  }\n  .is-exiting &{\n    transform: translateY(-50px);\n    //opacity: 0;\n  }\n}\n\n@mixin slideInnerTextOnTransition{\n  overflow: hidden;\n  position: relative;\n\n  span{\n    display: block;\n    position: relative;\n  //  transition: transform .5s $fast-bezier;\n    //transform: translateY(120%);\n\n    //\n    //.is-visible &{\n    //  transform: translateY(0);\n    //}\n    //.is-exiting &{\n    //  transform: translateY(-110%);\n    //}\n  }\n}\n\n@mixin header-overlay-desktop{\n  //   /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#4b4586+3,4b4586+100&1+41,0+100 */\n  // background: -moz-linear-gradient(left, rgba(75,69,134,1) 3%, rgba(75,69,134,1) 41%, rgba(75,69,134,0) 100%); /* FF3.6+ */\n  // background: -webkit-gradient(linear, left top, right top, color-stop(3%,rgba(75,69,134,1)), color-stop(41%,rgba(75,69,134,1)), color-stop(100%,rgba(75,69,134,0))); /* Chrome,Safari4+ */\n  // background: -webkit-linear-gradient(left, rgba(75,69,134,1) 3%,rgba(75,69,134,1) 41%,rgba(75,69,134,0) 100%); /* Chrome10+,Safari5.1+ */\n  // background: -o-linear-gradient(left, rgba(75,69,134,1) 3%,rgba(75,69,134,1) 41%,rgba(75,69,134,0) 100%); /* Opera 11.10+ */\n  // background: -ms-linear-gradient(left, rgba(75,69,134,1) 3%,rgba(75,69,134,1) 41%,rgba(75,69,134,0) 100%); /* IE10+ */\n  // background: linear-gradient(to right, rgba(75,69,134,1) 3%,rgba(75,69,134,1) 41%,rgba(75,69,134,0) 100%); /* W3C */\n  // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4b4586', endColorstr='#004b4586',GradientType=1 ); /* IE6-9 */\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#1174c1+23,7db9e8+100&1+52,0+100 */\n  background: -moz-linear-gradient(left, rgba(17,116,193,1) 23%, rgba(58,142,208,1) 52%, rgba(125,185,232,0) 100%); /* FF3.6+ */\n  background: -webkit-gradient(linear, left top, right top, color-stop(23%,rgba(17,116,193,1)), color-stop(52%,rgba(58,142,208,1)), color-stop(100%,rgba(125,185,232,0))); /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* Opera 11.10+ */\n  background: -ms-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* IE10+ */\n  background: linear-gradient(to right, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1174c1', endColorstr='#007db9e8',GradientType=1 ); /* IE6-9 */\n}\n\n@mixin header-overlay-tablet{\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#4b4586+22,4b4586+100&1+20,0+100 */\n  // background: -moz-linear-gradient(left, rgba(75,69,134,1) 20%, rgba(75,69,134,0.98) 22%, rgba(75,69,134,0) 100%); /* FF3.6+ */\n  // background: -webkit-gradient(linear, left top, right top, color-stop(20%,rgba(75,69,134,1)), color-stop(22%,rgba(75,69,134,0.98)), color-stop(100%,rgba(75,69,134,0))); /* Chrome,Safari4+ */\n  // background: -webkit-linear-gradient(left, rgba(75,69,134,1) 20%,rgba(75,69,134,0.98) 22%,rgba(75,69,134,0) 100%); /* Chrome10+,Safari5.1+ */\n  // background: -o-linear-gradient(left, rgba(75,69,134,1) 20%,rgba(75,69,134,0.98) 22%,rgba(75,69,134,0) 100%); /* Opera 11.10+ */\n  // background: -ms-linear-gradient(left, rgba(75,69,134,1) 20%,rgba(75,69,134,0.98) 22%,rgba(75,69,134,0) 100%); /* IE10+ */\n  // background: linear-gradient(to right, rgba(75,69,134,1) 20%,rgba(75,69,134,0.98) 22%,rgba(75,69,134,0) 100%); /* W3C */\n  // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#4b4586', endColorstr='#004b4586',GradientType=1 ); /* IE6-9 */\n  background: -moz-linear-gradient(left, rgba(17,116,193,1) 23%, rgba(58,142,208,1) 52%, rgba(125,185,232,0) 100%); /* FF3.6+ */\n  background: -webkit-gradient(linear, left top, right top, color-stop(23%,rgba(17,116,193,1)), color-stop(52%,rgba(58,142,208,1)), color-stop(100%,rgba(125,185,232,0))); /* Chrome,Safari4+ */\n  background: -webkit-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* Chrome10+,Safari5.1+ */\n  background: -o-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* Opera 11.10+ */\n  background: -ms-linear-gradient(left, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* IE10+ */\n  background: linear-gradient(to right, rgba(17,116,193,1) 23%,rgba(58,142,208,1) 52%,rgba(125,185,232,0) 100%); /* W3C */\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1174c1', endColorstr='#007db9e8',GradientType=1 ); /* IE6-9 */\n}\n/* @include when-inside('.example'){ */\n@mixin when-inside($selector) {\n  #{$selector} & {\n    @content;\n  }\n}\n/// This quantity-query mixin will select every items only if there is between `$min` and `$max` items.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin in-between($min, $max) {\n  $selector: &;\n  $child: nth(nth($selector, -1), -1);\n\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child,\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child ~ #{$child} {\n    @content;\n  }\n}\n\n/*  @include family-of(3){  */\n@mixin family-of($n) {\n  &:first-child:nth-last-child(#{$n}) ~ &,\n  &:first-child:nth-last-child(#{$n}) {\n    @content;\n  }\n}\n\n\n/* @include nth-of-family(3, 7) { */\n@mixin nth-of-family($n, $m) {\n  $m: $m + 1 - $n;\n  &:nth-child(#{$n}):nth-last-child(#{$m}) {\n    @content;\n  }\n}\n\n// Check if z-index item appears in $list. If not, return an errors\n@function z($list, $element) {\n  $z-index: index($list, $element);\n\n  @if $z-index {\n    @return $z-index;\n  }\n\n  @warn 'There is no item \"#{$element}\" in this list; choose one of: #{$list}';\n  @return null;\n}\n\n@mixin phone {\n  @media (max-width: #{$phone-width}) {\n    @content;\n  }\n}\n\n@mixin phone-large {\n  @media (min-width: #{$phone-width}) and (max-width: #{$phone-large-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin phone-large-below {\n  @media (max-width: #{$phone-large-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin tablet {\n  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin tablet-below {\n  @media (max-width: #{$tablet-width}) {\n    @content;\n  }\n}\n\n\n@mixin tablet-small-below {\n  @media (max-width: #{$tablet-small-width}) {\n    @content;\n  }\n}\n\n@mixin tablet-above {\n  @media (min-width: #{$tablet-width}) {\n    @content;\n  }\n}\n\n@mixin desktop {\n  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-medium-width - 1px}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-below {\n  @media (max-width: #{$desktop-width}) {\n    @content;\n  }\n}\n\n@mixin desktop-above {\n  @media (min-width: #{$desktop-width}){\n    @content;\n  }\n}\n\n\n\n@mixin desktop-small-above {\n  @media (min-width: #{$desktop-small-width}){\n    @content;\n  }\n}\n\n@mixin desktop-small {\n  @media (min-width: #{$desktopwidth}) and (max-width: #{$desktop-small-width - 1px}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-small-below {\n  @media (max-width: #{$desktop-small-width}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-medium {\n  @media (min-width: #{$desktop-width}) and (max-width: #{$desktop-medium-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin desktop-medium-below {\n  @media (max-width: #{$desktop-medium-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin desktop-medium-above {\n  @media (min-width: #{$desktop-medium-width}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-large {\n  @media (min-width: #{$desktop-medium-width}) and (max-width: #{$desktop-large-width - 1px}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-large-below {\n  @media (max-width: #{$desktop-large-width - 1px}) {\n    @content;\n  }\n}\n\n\n@mixin desktop-xlarge {\n  @media (min-width: #{$desktop-large-width}) and (max-width: #{$desktop-xlarge-width - 1px}) {\n    @content;\n  }\n}\n\n@mixin desktop-xlarge-below {\n  @media (max-width: #{$desktop-xlarge-width - 1px}) {\n    @content;\n  }\n}\n\n\n@mixin height-large-above {\n  @media (min-height: 1000px) {\n    @content;\n  }\n}\n\n\n@mixin height-large {\n  @media (max-height: 1000px) {\n    @content;\n  }\n}\n\n@mixin height-medium {\n  @media (max-height: 800px) {\n    @content;\n  }\n}\n\n\n@mixin height-small {\n  @media (max-height: 650px) {\n    @content;\n  }\n}\n\n\n\n@mixin height-xsmall {\n  @media (max-height: 450px) {\n    @content;\n  }\n}\n\n\n","// Fonts\n$title-font: 'Roboto', sans-serif;\n$body-font: 'Roboto', sans-serif;\n\n// Bezier\n$smooth-bezier: cubic-bezier(.694,.048,.335,1);\n$fast-bezier: cubic-bezier(.64,.39,.03,1.24);\n\n// colours\n$blue: #223b74;\n$red: #dc3137;\n$yellow: #ffe41e;\n\n// repsonvie sizes\n$phone-width: 320px;\n$phone-large-width: 550px;\n$tablet-small-width: 675px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n$desktop-small-width: 1200px;\n$desktop-medium-width: 1400px;\n$desktop-large-width: 1600px;\n$desktop-xlarge-width: 1800px;\n"]}